"0","#igraph, creating the graph entities while filtering for weight"
"0","Nodes_betweenness<- igraph::betweenness(net)"
"0","#### Nodes Enchancement "
"0","V(net)$degree <- igraph::degree(net, mode = ""all"")"
"0","V(net)$betweenness <-log(10+Nodes_betweenness)/log(1+max(Nodes_betweenness))"
"0","V(net)$centrality <- eigen_centrality(net, weights=E(net)$Weight)$vector"
"0","V(net)$community <- colorize(V(net)$community)"
"0","V(net)$text <- V(net)$countries"
"0","V(net)$color <- colorize(V(net)$degree)"
"0","#### Edge Enhancement"
"0","#Need to manually alocate the Edge lat,lon to appropriate coordinates"
"0","end_loc <- data.table(ename=as.integer(get.edgelist(net)[,2]))"
"0","end_loc<- CountryIDNodes[end_loc, on= c(id=""ename""), nomatch= 0]"
"0","start_loc <- data.table(ename=as.integer(get.edgelist(net)[,1]))"
"0","start_loc<- CountryIDNodes[start_loc, on= c(id=""ename""), nomatch= 0]"
"0","### Setting coordinates of edges arrow start location and end location on lat/lon"
"0","E(net)$endlat <- end_loc$lat"
"0","E(net)$endlon <- end_loc$lon"
"0","E(net)$startlat <- start_loc$lat"
"0","E(net)$startlon <- start_loc$lon"
"0","### Scaling of weight"
"0","# applying a logarithm scale to recale the weight from 0 to 1"
"0","E(net)$weight<-log(1+E(net)$weight)/log(1+max(E(net)$weight))"
