{
    "collab_server" : "",
    "contents" : "+++\ndate = 2016-04-20\nlastmod = 2017-09-03\ndraft = false\ntags = [\"academic\", \"hugo\"]\ntitle = \"Getting started with the Academic framework for Hugo\"\nmath = true\nsummary = \"\"\"\nCreate a beautifully simple personal or academic website in under 10 minutes. \n\"\"\"\n\n[header]\nimage = \"headers/getting-started.png\"\ncaption = \"Image credit: [**Academic**](https://github.com/gcushen/hugo-academic/)\"\n\n+++\n\nThe Academic framework enables you to easily create a beautifully simple personal or academic website using the [Hugo](https://gohugo.io) static site generator.\n\nKey features:\n\n- Easily manage your homepage, blog posts, publications, talks, and projects\n- Configurable widgets available for Biography, Publications, Projects, News/Blog, Talks, and Contact\n- Need a different section? Just use the Custom widget!\n- Write in [Markdown]({{< ref \"post/writing-markdown-latex.md\" >}}) for easy formatting and code highlighting, with [LaTeX](https://en.wikibooks.org/wiki/LaTeX/Mathematics) for mathematical expressions\n- Social/academic network linking, [Google Analytics](https://analytics.google.com), and [Disqus](https://disqus.com) comments\n- Responsive and mobile friendly\n- Simple and refreshing one page design\n- Multilingual and easy to customize\n\n{{% toc %}}\n\n## Installation\n\n1. [Install Hugo](https://georgecushen.com/create-your-website-with-hugo/#installing-hugo) and create a new website by typing the following commands in your *Terminal* or *Command Prompt* app:\n\n        hugo new site my_website\n        cd my_website\n\n2. Install Academic with [git](https://help.github.com/articles/set-up-git/):\n\n        git clone https://github.com/gcushen/hugo-academic.git themes/academic\n\n    Or alternatively, [download Academic](https://github.com/gcushen/hugo-academic/archive/master.zip) and extract it into a `themes/academic` folder within your Hugo website.\n\n3. If you are creating a new website, copy the contents of the `exampleSite` folder to your website root folder, overwriting existing files if necessary. The `exampleSite` folder contains an example config file and content to help you get started.\n\n        cp -av themes/academic/exampleSite/* .\n\n4. Start the Hugo server from your website root folder:\n\n        hugo server --watch\n\n    Now you can go to [localhost:1313](http://localhost:1313) and your new Academic powered website should appear.\n\n5. Customize your website - refer to the *Getting Started* section below\n\n6. Build your site by running the `hugo` command. Then [host it for free using Github Pages](https://georgecushen.com/create-your-website-with-hugo/). Or alternatively, copy the generated `public/` directory (by FTP, Rsync, etc.) to your production web server (such as your university's hosting service).\n\n\n## Getting Started\n\nAssuming you created a new website with the example content following the installation steps above, this section explores just a few more steps in order to customize it.\n\n### Core parameters\n\nThe core parameters for the website can be edited in the `config.toml` configuration file:\n\n- Set `baseurl` to your website URL (we recommend [GitHub Pages](https://georgecushen.com/create-your-website-with-hugo/) for free hosting)\n- Set `title` to your desired website title such as your name\n- The example Disqus commenting variable should be cleared (e.g. `disqusShortname = \"\"`) or set to your own [Disqus](https://disqus.com/) shortname to enable commenting\n- Edit your details under `[params]`; these will be displayed mainly in the homepage *about* and *contact* widgets (if used). To disable a contact field, simply clear the value to `\"\"`. \n- Place a square cropped portrait photo named `portrait.jpg` into the `static/img/` folder, overwriting any defaults. Note that you can edit the `avatar` filepath to point to a different image name or clear the value to disable the avatar feature. Alternatively, set `gravatar` to `true` to use the Gravatar/Wordpress avatar associated with your `email` address.\n- To enable LaTeX math for your site, set `math = true`\n- Social/academic networking links are defined as multiples of `[[params.social]]`. They can be created or deleted as necessary.\n\n### Introduce yourself\n\nEdit your biography in the *about* widget `content/home/about.md` that you copied across from the `themes/academic/exampleSite/` folder. The research interests and qualifications are stored as `interests` and `education` variables. The academic qualifications are defined as multiples of `[[education.courses]]` and can be created or deleted as necessary. It's possible to completely hide the interests and education lists by deleting their respective variables.\n\n### Customize the homepage\n\nRefer to our guide on using [widgets]({{< ref \"post/widgets.md\" >}}) to customize your homepage.\n\n### Add your content\n\nRefer to our guide on [managing content]({{< ref \"post/managing-content.md\" >}}) to create your own publications, blog posts, talks, and projects.\n\n### Remove unused widgets and pages\n\n[How to remove unused widgets and content pages]({{< ref \"post/managing-content.md#removing-content\" >}}).\n\n### Themes\n\nThe following color themes are available and can be set by the `color_theme` option in `config.toml`:\n\n- default (light blue) <span style=\"width: 1rem; height: 1rem; display: inline-block; border: 1px solid gray; border-radius: 2px; background: #0095eb\"></span>\n- ocean (deep blue) <span style=\"width: 1rem; height: 1rem; display: inline-block; border: 1px solid gray; border-radius: 2px; background: #3f51b5\"></span>\n- forest (green) <span style=\"width: 1rem; height: 1rem; display: inline-block; border: 1px solid gray; border-radius: 2px; background: #4caf50\"></span>\n- coffee (brown) <span style=\"width: 1rem; height: 1rem; display: inline-block; border: 1px solid gray; border-radius: 2px; background: #795548\"></span>\n\nThe following font styles are available and can be set by the `font` option in `config.toml`:\n\n- default (modern)\n- classic\n\n### Customization & updating\n\nContinue reading below for advanced customization tips and instructions for keeping the framework up-to-date with any improvements that become available.\n\n\n## Advanced customization\n\nIt is possible to carry out many customizations without touching any files in `themes/academic`, making it easier to update the framework in the future.\n\n### Navigation menu\n\nThe `[[menu.main]]` entries towards the bottom of `config.toml` define the navigation links at the top of the website. They can be added or removed as desired.\n\nTo create a dropdown sub-menu, add `identifier = \"something\"` to the parent item and `parent = \"something\"` to the child item.\n\n### Website icon\n\nSave your main icon and mobile icon as square PNG images named `icon.png` and `apple-touch-icon.png`, respectively. Place them in your root `static/img/` folder.\n\n### Analytics\n\nTo enable [Google Analytics](http://www.google.com/analytics), add your tracking code in `config.toml` similarly to `googleAnalytics = \"UA-12345678-9\"`.\n\n### Third party and local scripts (JS)\n\nTo add a third party script, create a file named `head_custom.html` in a `layouts/partials/` folder at the root of your website (not in the `themes` folder). Any HTML code added to this file will be included within your website's `<head>`. Therefore, it's suitable for adding custom metadata or third party scripts specified with the *async* attribute.\n\nWhereas for your own local scripts, you can link your local JS assets (relative to your root `static/js`) from your `config.toml` using `custom_js  = [\"custom.js\"]`.\n\n### Language and translation\n\nThe interface text (e.g. buttons) is stored in language files which are collected from Academic's `themes/academic/i18n/` folder, as well as an `i18n/` folder at the root of your project.\n\nTo edit the interface text, copy `themes/academic/i18n/en.yaml` to `i18n/en.yaml` (relative to the root of your website). Open the new file and make any desired changes to the text appearing after `translation:`. Note that the language files are formatted in YAML syntax.\n\nTo translate the interface text to another language, follow the above instructions, but name the new file in the form `i18n/X.yaml` where `X` is the appropriate [ISO/RFC5646 language identifier](http://www.w3schools.com/tags/ref_language_codes.asp) for the translation. Then follow the brief instructions in the *Language* section at the bottom of your `config.toml`. To change the default language used by Academic, set `defaultContentLanguage` to the desired language identifier in your configuration file.\n\nTo translate the navigation bar, you can edit the default `[[menu.main]]` instances in `config.toml`. However, for a multilingual site, you will need to duplicate all of the `[[menu.main]]` instances and rename the new instances from `[[menu.main]]` to `[[Languages.X.menu.main]]`, where `X` is the language identifier (e.g. `[[Languages.zh.menu.main]]` for Simplified Chinese). Thus, the navigation bar can be displayed in multiple languages.\n\nTo translate a content file in your `content/` folder into another language, copy the file to `filename.X.md` where `filename` is your existing filename and `X` is the appropriate [ISO/RFC5646 language identifier](http://www.w3schools.com/tags/ref_language_codes.asp) for the translation. Then translate the content in the new file to the specified language.\n\nFor further details on Hugo's internationalization and multilingual features, refer to the [associated Hugo documentation](https://gohugo.io/content/multilingual/).\n\n### Permalinks\n\n*Permalinks*, or *permanent links*, are URLs to individual pages and posts on your website. They are permanent web addresses which can be used to link to your content. Using Hugo's *permalinks* option these can be easily customized. For example, the blog post URL can be changed to the form *yourURL/2016/05/01/my-post-slug* by adding the following near the top of your `config.toml` (before `[params]` settings):\n\n    [permalinks]\n        post = \"/:year/:month/:day/:slug\"\n\nWhere `:slug` defaults to the filename of the post, excluding the file extension. However, slug may be overridden on a per post basis if desired, simply by setting `slug = \"my-short-post-title\"` in your post preamble.\n\n### Advanced style customization (CSS)\n\nFor advanced customization of the style, you can link custom CSS assets (relative to your root `static/css`) from your `config.toml` using `custom_css = [\"custom.css\"]`.\n\nFor example, let's override some of Academic's default styles. First, define `custom_css = [\"override.css\"]` in `config.toml`. Then we can create the file `static/css/override.css`, relative to your website root (i.e. **not** in the `themes` directory). Add your custom CSS to this file.\n\n\n## Updating\n\nFeel free to *star* the project on [Github](https://github.com/gcushen/hugo-academic/) to help keep track of updates and check out the [release notes](https://sourcethemes.com/academic/tags/updates) prior to updating your site.\n\nBefore updating the framework, it is recommended to make a backup of your entire website directory, or at least your `themes/academic` directory.\n\nBefore updating for the first time, the remote *origin* repository should be renamed to *upstream*:\n\n    $ cd themes/academic\n    $ git remote rename origin upstream\n\nTo list available updates:\n\n    $ cd themes/academic\n    $ git fetch upstream\n    $ git log --pretty=oneline --abbrev-commit --decorate HEAD..upstream/master\n\nThen, update by running:\n\n    $ git pull upstream\n\nIf you have modified files in `themes/academic`, git will attempt to auto-merge changes. If conflicts are reported, you will need to manually edit the files with conflicts and add them back (`git add <filename>`).\n\nIf there are any issues after updating, you may wish to compare your site with the latest [example site](https://github.com/gcushen/hugo-academic/tree/master/exampleSite) to check if any settings changed in `config.toml` or the `+++` frontmatter of content files.\n\n\n## Feedback & Contributing\n\nPlease use the [issue tracker](https://github.com/gcushen/hugo-academic/issues) to let me know about any bugs or feature requests, or alternatively make a pull request.\n\nFor general questions about Hugo, there is a [Hugo discussion forum](http://discuss.gohugo.io).\n\n\n## License\n\nCopyright 2016 [George Cushen](https://georgecushen.com).\n\nReleased under the [MIT](https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md) license.\n",
    "created" : 1508339090906.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3548094004",
    "id" : "8A6F24C7",
    "lastKnownWriteTime" : 1508251905,
    "last_content_update" : 1508251905,
    "path" : "C:/Users/haotm/Desktop/Ming_blog/content/post/getting-started.md",
    "project_path" : "content/post/getting-started.md",
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "markdown"
}